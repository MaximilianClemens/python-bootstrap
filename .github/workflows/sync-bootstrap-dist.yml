name: Sync Bootstrap Dist

on:
  schedule:
    # Run weekly on Mondays at 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches: [ main ]
    paths: [ '.github/workflows/sync-bootstrap-dist.yml' ]

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest Bootstrap release
        id: bootstrap-release
        run: |
          # Get latest release info from Bootstrap repository
          RELEASE_INFO=$(curl -s https://api.github.com/repos/twbs/bootstrap/releases/latest)
          VERSION=$(echo "$RELEASE_INFO" | jq -r '.tag_name')
          DIST_URL=$(echo "$RELEASE_INFO" | jq -r '.assets[] | select(.name | contains("dist.zip")) | .browser_download_url')
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "dist_url=$DIST_URL" >> $GITHUB_OUTPUT
          echo "release_name=$(echo "$RELEASE_INFO" | jq -r '.name')" >> $GITHUB_OUTPUT
          
          echo "Bootstrap version: $VERSION"
          echo "Dist URL: $DIST_URL"

      - name: Check if version already exists
        id: check-version
        run: |
          if [ -f "bootstrap/version.txt" ]; then
            CURRENT_VERSION=$(cat bootstrap/version.txt)
            echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "current_version=" >> $GITHUB_OUTPUT
          fi
          
          if [ "${{ steps.bootstrap-release.outputs.version }}" = "$CURRENT_VERSION" ]; then
            echo "update_needed=false" >> $GITHUB_OUTPUT
            echo "Bootstrap is already up to date ($CURRENT_VERSION)"
          else
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "Update needed: $CURRENT_VERSION -> ${{ steps.bootstrap-release.outputs.version }}"
          fi

      - name: Download and extract Bootstrap dist
        if: steps.check-version.outputs.update_needed == 'true'
        run: |
          # Download the dist ZIP
          curl -L "${{ steps.bootstrap-release.outputs.dist_url }}" -o bootstrap-dist.zip
          curl https://raw.githubusercontent.com/twbs/bootstrap/refs/heads/main/LICENSE -o bootstrap/LICENSE
          
          # Create bootstrap directory if it doesn't exist
          mkdir -p bootstrap
          
          # Remove old dist files but keep version.txt for now
          if [ -d "bootstrap/css" ]; then rm -rf bootstrap/css; fi
          if [ -d "bootstrap/js" ]; then rm -rf bootstrap/js; fi
          
          # Extract the ZIP
          unzip -q bootstrap-dist.zip
          
          # Find the extracted directory (should be like bootstrap-5.3.8-dist)
          EXTRACT_DIR=$(find . -maxdepth 1 -name "bootstrap-*-dist" -type d)
          
          # Move the contents to our bootstrap directory
          if [ -d "$EXTRACT_DIR" ]; then
            cp -r "$EXTRACT_DIR"/* bootstrap/
          fi
          
          # Clean up
          rm -rf "$EXTRACT_DIR" bootstrap-dist.zip
          
          # Write version file
          echo "${{ steps.bootstrap-release.outputs.version }}" > bootstrap/version.txt
          
          echo "Bootstrap ${{ steps.bootstrap-release.outputs.version }} extracted successfully"

      - name: Create Pull Request
        if: steps.check-version.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update Bootstrap to ${{ steps.bootstrap-release.outputs.version }}"
          title: "Update Bootstrap to ${{ steps.bootstrap-release.outputs.version }}"
          body: |
            ## Bootstrap Update
            
            This PR updates Bootstrap from `${{ steps.check-version.outputs.current_version }}` to `${{ steps.bootstrap-release.outputs.version }}`.
            
            **Changes:**
            - Updated Bootstrap CSS and JS files
            - Version: ${{ steps.bootstrap-release.outputs.release_name }}
            
            **Source:** [Bootstrap Release ${{ steps.bootstrap-release.outputs.version }}](https://github.com/twbs/bootstrap/releases/tag/${{ steps.bootstrap-release.outputs.version }})
            
            This update was automatically generated by the sync-bootstrap-dist workflow.
          branch: update-bootstrap-${{ steps.bootstrap-release.outputs.version }}
          delete-branch: true
          base: main

      - name: Create Git Tag
        if: steps.check-version.outputs.update_needed == 'true'
        run: |
          # Create and push a git tag with the Bootstrap version
          VERSION="${{ steps.bootstrap-release.outputs.version }}"
          # Remove 'v' prefix if present to match Python package versioning
          CLEAN_VERSION=${VERSION#v}
          
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Create annotated tag
          git tag -a "$CLEAN_VERSION" -m "Release python-bootstrap $CLEAN_VERSION with Bootstrap $VERSION"
          
          # Push the tag
          git push origin "$CLEAN_VERSION"
          
          echo "‚úÖ Created and pushed git tag: $CLEAN_VERSION"

      - name: Summary
        run: |
          if [ "${{ steps.check-version.outputs.update_needed }}" = "true" ]; then
            echo "‚úÖ Bootstrap updated to ${{ steps.bootstrap-release.outputs.version }}"
            echo "üìù Pull request created for review"
            echo "üè∑Ô∏è  Git tag created for python-bootstrap release"
          else
            echo "‚úÖ Bootstrap is already up to date (${{ steps.check-version.outputs.current_version }})"
            echo "‚ÑπÔ∏è  No action needed"
          fi
